### KAFKA CONSUMER TYPE:
# - KAFKA_LISTENER (change "ack-mode" to, for example, RECORD/MANUAL_IMMEDIATE),
# - KAFKA_LISTENER_ACK,
# - KAFKA_LISTENER_JSON
# - KAFKA_LISTENER_JSON_HANDLER
# - KAFKA_LISTENER_JSON_TYPE
# - REACTIVE_DELAY_UNTIL
# - REACTIVE_DO_ON_NEXT
# - REACTIVE_SUBSCRIBE
kafka-consumer-type=KAFKA_LISTENER

### BOOTSTRAP SERVERS
spring.kafka.bootstrap-servers=localhost:9092

### CONSUMER GROUP ID
spring.kafka.consumer.group-id=test-consumer

### ACK-MODE (MANUAL, MANUAL_IMMEDIATE, RECORD,...)
### https://docs.spring.io/spring-kafka/api/org/springframework/kafka/listener/ContainerProperties.AckMode.html
#spring.kafka.listener.ack-mode=MANUAL_IMMEDIATE

### MAX POLL RECORDS
spring.kafka.consumer.max-poll-records=20

### MAX POLL INTERVAL (default?: 300000)
#spring.kafka.consumer.properties.max.poll.interval.ms=20000000

### ENABLE AUTO-COMMIT: DEFAULT "false" (since Spring Boot 2.2)
spring.kafka.consumer.enable-auto-commit=false

### CONSUMER/PRODUCER DESERIALIZER/SERIALIZER with error handling for "poison pill" (SerializationException)
spring.kafka.consumer.key-deserializer=org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.ErrorHandlingDeserializer

### STRING SERIALIZER/DESERIALIZER - KEY
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.properties.spring.deserializer.key.delegate.class=org.apache.kafka.common.serialization.StringDeserializer

### STRING SERIALIZER/DESERIALIZER - VALUE
#spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer
#spring.kafka.properties.spring.deserializer.value.delegate.class=org.apache.kafka.common.serialization.StringDeserializer

### JSON SERIALIZER/DESERIALIZER - VALUE (Use default "ack-mode")
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.properties.spring.deserializer.value.delegate.class=org.springframework.kafka.support.serializer.JsonDeserializer

### PROCESSING JSON - TRUSTED PACKAGES (Use JSON SERIALIZER/DESERIALIZER)
spring.kafka.consumer.properties.spring.json.trusted.packages=*

### PROCESSING JSON - ADD/USE TYPE HEADERS (Use JSON SERIALIZER/DESERIALIZER)
#spring.kafka.producer.properties.spring.json.add.type.headers=false
#spring.kafka.consumer.properties.spring.json.use.type.headers=false
### PROCESSING JSON - DEFAULT TYPE (Use JSON SERIALIZER/DESERIALIZER)
#spring.kafka.consumer.properties.spring.json.value.default.type=com.github.tomasoberle.kafka.example.dto.TestDto

